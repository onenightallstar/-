show databases;
create database universityinnovationproject;
use universityinnovationproject;
创建表
create table S
(
Sno char(5) unique,
Sname char(7),
Ssex char(1),
Sage int check (Sage between 0 and 120),
Sdept char(5)
);

create table T
(
Tno char(3) unique,
Tname char(4),
Tsex char(1),
Tdept char(5)
);

create table P
(
Pno char(1) unique,
Pname char(10),
Tno char(3) 
);

create table SP
(
Sno char(5) ,
Pno char(1),
Grade int check (Grade between 0 and 100)
);

ALTER TABLE P ADD FOREIGN KEY teacher_no (Tno) REFERENCES T (Tno);
ALTER TABLE SP ADD FOREIGN KEY student_no (Sno) REFERENCES S (Sno);
ALTER TABLE SP ADD FOREIGN KEY project_no (Pno) REFERENCES P (Pno);


insert into S(Sno,Sname,Ssex,Sage,Sdept) value ('23121', '����', '��', 20, 'CS');
insert into S(Sno,Sname,Ssex,Sage,Sdept) value ('23122', '����', 'Ů', 19, 'CS' );
insert into S(Sno,Sname,Ssex,Sage,Sdept) value ('23123', '��ǿ', 'Ů', 19, 'CS' );
insert into S(Sno,Sname,Ssex,Sage,Sdept) value ('23124', '����', 'Ů', 19, 'CS' );
insert into S(Sno,Sname,Ssex,Sage,Sdept) value ('23125', '����', '��', 20, 'CS' );
insert into S(Sno,Sname,Ssex,Sage,Sdept) value ('23126', '����', 'Ů', 19, 'CS' );
insert into S(Sno,Sname,Ssex,Sage,Sdept) value ('23127', '����', '��', 20, 'CS' );
insert into S(Sno,Sname,Ssex,Sage,Sdept) value ('23128', '����', 'Ů', 19, 'CS' );
insert into S(Sno,Sname,Ssex,Sage,Sdept) value ('23201', '��ˬ', '��' ,20, 'MA' );
insert into S(Sno,Sname,Ssex,Sage,Sdept) value ('23202', '����Ȼ', '��', 18, 'MA');
insert into S(Sno,Sname,Ssex,Sage,Sdept) value ('23203', '����', '��', 20, 'MA'	 );
insert into S(Sno,Sname,Ssex,Sage,Sdept) value ('23204', '��δȻ', 'Ů', 18, 'MA' );
insert into S(Sno,Sname,Ssex,Sage,Sdept) value ('23205', '��ͮͮ', 'Ů', 20, 'MA' );
insert into S(Sno,Sname,Ssex,Sage,Sdept) value ('23206', '��һ', 'Ů', 18, 'MA' );
insert into S(Sno,Sname,Ssex,Sage,Sdept) value ('23321', '����', '��', 19, 'IS' );
insert into S(Sno,Sname,Ssex,Sage,Sdept) value ('23322', '����', 'Ů', 19, 'IS' );

insert into T(Tno,Tname,Tdept) value ('101', '����', 'CS');
insert into T(Tno,Tname,Tdept) value ('102', 'չ��', 'CS');
insert into T(Tno,Tname,Tdept) value ('103', '����', 'MA');
insert into T(Tno,Tname,Tdept) value ('104','����', 'IS');

insert into P(Pno,Pname,Tno) value ('1', '���ݿ������Ŀ',		'101');
insert into P(Pno,Pname,Tno) value ('2', '���˻����������Ŀ',	'103'	);
insert into P(Pno,Pname,Tno) value ('3', 'У԰����滮��Ŀ',		'102'	);
insert into P(Pno,Pname,Tno) value ('4', '����ϵͳ�����Ŀ',		'101'	);
insert into P(Pno,Pname,Tno) value ('5', '�Ӿ�������Ŀ',			'102'	  );
insert into P(Pno,Pname,Tno) value ('6', '��ģ�͹�����Ŀ',		'104'	 );
																   
insert into SP(Sno,Pno,Grade) value ('23122', '3', 80	 );
insert into SP(Sno,Pno,Grade) value ('23122', '2', 90	 );
insert into SP(Sno,Pno,Grade) value ('23121', '3', 88	 );
insert into SP(Sno,Pno,Grade) value ('23122', '5', 68	 );
insert into SP(Sno,Pno,Grade) value ('23123', '1', 92	 );
insert into SP(Sno,Pno,Grade) value ('23124', '2', 85	 );
insert into SP(Sno,Pno,Grade) value ('23125', '5', 94	 );
insert into SP(Sno,Pno,Grade) value ('23126', '3', 88	 );
insert into SP(Sno,Pno,Grade) value ('23201', '1', 92	 );
insert into SP(Sno,Pno,Grade) value ('23202', '1', 92	 );
insert into SP(Sno,Pno,Grade) value ('23202', '6', 77	 );
insert into SP(Sno,Pno,Grade) value ('23203', '2', 79	 );
insert into SP(Sno,Pno,Grade) value ('23204', '4', 72	 );
insert into SP(Sno,Pno,Grade) value ('23122', '6', 90	 );
insert into SP(Sno,Pno,Grade) value ('23205', '3', 99	 );
insert into SP(Sno,Pno,Grade) value ('23206', '5', 58	 );
insert into SP(Sno,Pno,Grade) value ('23321', '1', 55	 );
insert into SP(Sno,Pno,Grade) value ('23321', '6', 81	 );
insert into SP(Sno,Pno,Grade) value ('23322', '6', 89	 );
insert into SP(Sno,Pno,Grade) value ('23322', '2', 75	 );
insert into SP(Sno,Pno,Grade) value ('23128', '4', 81	 );
insert into SP(Sno,Pno,Grade) value ('23127', '4', 89	 );
insert into SP(Sno,Pno,Grade) value ('20128', '1', 88	 );
insert into SP(Sno,Pno,Grade) value ('23122', '1', 75	 );
insert into SP(Sno,Pno,Grade) value ('23122', '4', 80	 );

1. ��ѯ���� 2 ����Ŀ��ѧ��ѧ����ÿγ̳ɼ���
SELECT SP.Sno, SP.Grade
FROM SP
WHERE SP.Pno = 2;

2. ��ѯ������Ŀ��Ϊ'���ݿ������Ŀ'�Ľ�ʦ������
SELECT T.Tname
FROM T,P
WHERE T.Tno = P.Tno AND P.Pname = '���ݿ������Ŀ';

3. ��ѯû�в��� 3 ����Ŀ��ѧ��������רҵ��
SELECT S.Sname, S.Sdept
FROM S
WHERE S.Sno NOT IN (SELECT SP.Sno FROM SP WHERE SP.Pno = '3');

4. ��ѯ�μ���������Ŀ��ѧ��������
SELECT S.Sname 
FROM S
WHERE NOT EXISTS (
  SELECT Pno
  FROM P
  WHERE NOT EXISTS (
    SELECT SP.Sno
    FROM SP
    WHERE SP.Sno = S.Sno AND SP.Pno = P.Pno
  )
);

5. ��ѯֻ�μ�һ����Ŀ��ѧ����ѧ�š�

SELECT SP.Sno
FROM SP
GROUP BY SP.Sno
HAVING COUNT(DISTINCT SP.Pno) = 1;


6. ��ѯ������Ŀ�ɼ��������ѧ����ѧ�ź�ƽ���ɼ�,������ƽ���ɼ��Ľ������С���ƽ���ɼ���������Ŀ�ɼ�/������Ŀ����
SELECT SP.Sno, AVG(SP.Grade) AS average_grade
FROM SP
GROUP BY SP.Sno
HAVING MIN(SP.Grade) >= 60
ORDER BY average_grade DESC;

7. ��ѯ����1����Ŀ���ҳɼ�������2��ѧ�����������ɼ���ͬ����ͬ���δ���������88��88��85����85Ϊ��2����

�����޸ġ�ɾ������ͼ
1. ��4����Ŀ�ĳɼ�����5%��
UPDATE SP
SET Grade = Grade * 0.95
WHERE Pno = 4;

2. ��P���� SP����ɾ����Ŀ��Ϊ5���������ݡ���ɾ�������ع�������
DELETE FROM SP WHERE Pno = '5';
DELETE FROM P WHERE Pno = '5';
ROLLBACK;

3. ������ѧ������ͼ,���԰���ѧ�š�������������Ŀ���ֺͳɼ���
CREATE VIEW Male_Students AS
SELECT S.Sno, S.Sname, P.Pname, SP.Grade
FROM S
JOIN SP ON S.Sno = SP.Sno
JOIN P ON SP.Pno = P.Pno
WHERE S.Ssex = '��';

4. ����ѧ����ͼ�в�ѯƽ���ɼ����� 80 �ֵ�ѧ��ѧ����������
SELECT Sno, Sname
FROM Male_Students
GROUP BY Sno, Sname
HAVING AVG(Grade) > 80;

5. �����ɼ���ͼ������ÿ��ѧ���Ĳ�����Ŀ��Ŀ��ƽ���ɼ���
CREATE VIEW Grade_Statistics AS
SELECT Sno, COUNT(DISTINCT Pno) AS Project_Count, AVG(Grade) AS Average_Grade
FROM SP
GROUP BY Sno;

6. ʹ�� GRANT ���,�ѶԻ����� SP ������Ȩ�ޣ�S��P��T���Ĳ�ѯȨ���ڸ�Root3��
create user Root3
GRANT ALL PRIVILEGES ON universityinnovationproject.SP TO 'Root3';
GRANT SELECT ON universityinnovationproject.S TO 'Root3';
GRANT SELECT ON universityinnovationproject.P TO 'Root3';
GRANT SELECT ON universityinnovationproject.T TO 'Root3';

1.���Ƚ��S����SP���Ĳ��չ�ϵ��Ȼ����Student���ϴ���һ����������ʹ����һ��ѧ����ѧ����Ϣʱ�ܹ������ĸ��´�ѧ����SP���е�ѧ����Ϣ����������֤��
-- ���S����SP���Ĳ��չ�ϵ
ALTER TABLE SP
DROP FOREIGN KEY ;

-- ����������
DELIMITER //
CREATE TRIGGER update_Sno
AFTER UPDATE ON Student
FOR EACH ROW
BEGIN
  UPDATE SP
  SET Sno = NEW.Sno
  WHERE Sno = OLD.Sno;
END//
DELIMITER ;

2.�� S ���б�д insert �Ĵ��������������ѧ�����ܳ��� 18����������ڴ��������ӿ�����ɣ������������������뽫����ʵ�֡�������֤��
-- ����SC_log�����ڱ����޸�ǰ���Grade�ֶ���Ϣ
CREATE TABLE SC_log (
  Sno INT,
  Pno INT,
  Old_Grade INT,
  New_Grade INT,
  Modified_Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ����������
DELIMITER //
CREATE TRIGGER update_Grade
AFTER UPDATE ON SP
FOR EACH ROW
BEGIN
  IF OLD.Grade <> NEW.Grade THEN
    INSERT INTO SC_log (Sno, Pno, Old_Grade, New_Grade)
    VALUES (OLD.Sno, OLD.Pno, OLD.Grade, NEW.Grade);
  END IF;
END//
DELIMITER ;

3.�� SP ���ϱ�д update �����������޸� SP���е� Grade �ֶ�ʱ�����޸�ǰ�����Ϣ������ SC_log ���С�ʵ����ɺ�,���������Ļ���������ͼ��
-- ɾ��������
DROP TRIGGER IF EXISTS update_Sno;
DROP TRIGGER IF EXISTS limit_students;
DROP TRIGGER IF EXISTS update_Grade;

-- ɾ��SC_log��
DROP TABLE IF EXISTS SC_log;

-- �ָ�S����SP���Ĳ��չ�ϵ
ALTER TABLE SP
ADD CONSTRAINT FK_Sno FOREIGN KEY (Sno) REFERENCES S(Sno);








	